---
- summary: |
    Проверка регистрации через электронную почту
  requirement: |
    При вводе логине и пароля пользователь должен успешно зарегестрироваться на сайте
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    Nickname = Diana Email = example@test.com Password = 123456
  steps:
    - Вводим никнейм
    - Вводим имейл
    - Вводим пароль
    - Вводим подтверждение пороля
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь успешно зарегестрировался

- summary: |
    Проверка авторизации зарегистрированного пользователя
  requirement: |
    При верном вводе логина и пароля пользователь должен успешно авторизоваться в систему
  prerequisites: |
    открыта страница логина
  test-data: |
    Логин = example@test.com Пароль = 123456
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь успешно авторизован

- summary: |
    Проверка авторизации через Github
  requirement: |
    При наличие аккаунта на Github пользователь должен успешно авторизоваться в системе
  prerequisites: |
    Открыта страница логина, наличие аккаунта на Github
  test-data: |
    Нет данных
  steps:
    - Нажимаем кнопку "Sign in with Github"
    - Вводим логин и пароль от Github
  expected-result: |
    Пользователь успешно авторизован через GitHub

- summary: |
    Проверка авторизации черех Discord
  requirement: |
    При наличие аккаунта на Discord пользователь должен успешно авторизоваться в системе
  prerequisites: |
    Открыта страница логина, наличие аккаунта на Discord
  test-data: |
    Нет данных
  steps:
    - Нажимаем кнопку "Sign in with Discord"
    - Вводим логин и пароль от Discord
  expected-result: |
    Пользователь успешно авторизован через Discord

- summary: |
    Создание игры с ботом
  requirement: |
    После выбора параметров игра должна быть успешно создана
  prerequisites: |
    Открыта главная страница сайта
  test-data: |
    Level = например одна звезда
    Game Type = with a bot
    Time control = например 3 min
    Choose task by name or tags = например Random task
  steps:
    - Нажимаем кнопку "Create a game"
    - Вводим выше описанные параметры
    - Нажимаем кнопку "Create Battle"
  expected-result: |
    Успешно создана игра с ботом и заданными параметрами

- summary: |
    Отображение созданной игры с пользователем в окне "LOBBY"
  requirement: |
    После выбора параметров игра должна появиться в окне "LOBBY" на главной странице сайта
  prerequisites: |
    Открыта главная страница сайта
  test-data: |
    Level = например одна звезда
    Game Type = with other users
    Time control = например 3 min
    Choose task by name or tags = например Random task
  steps:
    - Нажимаем кнопку "Create a game"
    - Вводим выше описанные параметры
    - Нажимаем кнопку "Create Battle"
  expected-result: |
    Созданная игра должна появиться в окне "LOBBY" на главной странице сайта

- summary: |
    Создание игры с другими пользователями
  requirement: |
    После выбора параметров игра должна быть успешно создана
  prerequisites: |
    Открыта главная страница сайта
  test-data: |
    Level = например одна звезда
    Game Type = with other users
    Time control = например 3 min
    Choose task by name or tags = например Random task
  steps:
    - Нажимаем кнопку "Create a game"
    - Вводим выше описанные параметры
    - Нажимаем кнопку "Create Battle"
  expected-result: |
    Игра с пользователем успешно создана

- summary: |
    Проверка входа в игру созданную другим пользователем
  requirement: |
    Пользователь попадает в игру созданную другим пользователем
  prerequisites: |
    Открыта главная страница сайта
  test-data: |
    Нет данных
  steps:
    - В окне "LOBBY" находим игру со статусом "Fight"
    - Нажимаем кнопку "Fight"
  expected-result: |
    Пользователь переходит в выбранную игру

- summary: |
    Проверка выбора языка программирования в игре
  requirement: |
    Пользователь может выбрать нужный ему язык программирования в игре
  prerequisites: |
    Открыта страница с игрой
  test-data: |
    Текущий язык программирования = Clojure
    Желанмый язак программирования = Java 20
  steps:
    - В всплывающем меню с надписью Clojure выбрать язык программирования Java 20
  expected-result: |
    Язык программирования сменяются на выбранный 

- summary: |
    Проверка чата игры
  requirement: |
    Пользователь может писать сообщения в чат игры
  prerequisites: |
    Открыта страница с игрой
  test-data: |
    Нет данных
  steps:
    - В поле ввода сообщения с названиес "Please be nice in the chat" ввести сообщение "Hi!"
    - Нажать на кнопку "Send"
  expected-result: |
    Введенное сообщение появится в чате игры

- summary: |
    Проверка возможности переподключения к игре при вылете из игры 
  requirement: |
    Пользователь может перезайти в игру, если его оттуда выбросило
  prerequisites: |
    Открыта страница с игрой
  test-data: |
    Нет данных
  steps:
    - Нажать на кнопку "Back to Home"
    - Нажать на кнопку "Continue" в статусе своей игры
  expected-result: |
    Откроется страницы игры с возможностью продолжить писать код

